#include <QtCore/QCoreApplication>
#include <pthread.h>

#include <QDebug>
#include <QFile>
#include <QString>
#include <QStringList>
#include <QTextStream>
#include <QList>

#include "Matrix.h"
//#include "MatrixException.h"


struct matrix_args
{
    Matrix<float>* pMat;
    QString fileName;
};
/////////////////////////////
//GLOBAL VARIABLES
//////////////////////////
Matrix<float>* matrixA = new Matrix<float>(0,0);
Matrix<float>* matrixB = new Matrix<float>(0,0);
Matrix<float>* matrixC = new Matrix<float>(0,0);
//////////////////////////

void *createMatrix(void *args)
{
    matrix_args* matArgs;
    matArgs = (matrix_args*) args;

    matArgs->pMat->makeMatrix(matArgs->fileName);


    pthread_exit(NULL);
}





int main(int argc, char *argv[])
{
    int rc1 = 0;
    int rc2 = 0;

    qDebug() << "hello";


    matrix_args argsA;
    argsA.pMat = matrixA;
    argsA.fileName = "matrix_file1.dat";

    matrix_args argsB;
    argsB.pMat = matrixB;
    argsB.fileName = "matrix_file2.dat";

    pthread_t thread1;
    pthread_t thread2;
    rc1 = pthread_create(&thread1, NULL, createMatrix, (void*) &argsA);
    if (rc1)
    {
         qDebug() << "ERROR; return code from pthread_create() is " << rc1;
         exit(-1);
    }

    rc2 = pthread_create(&thread2, NULL, createMatrix, (void*) &argsB);
    if (rc2)
    {
         qDebug() << "ERROR; return code from pthread_create() is " << rc2;
         exit(-1);
    }

    pthread_join(thread1, NULL);

    pthread_join(thread2,NULL);
    qDebug() << "exited";




//    QString rowRead;

//    for(int i = 0; i < argsA.pMat->getColSize(); i++)
//    {
//        for(int j = 0; j < argsA.pMat->getRowSize(); j++)
//        {
//            rowRead.append( QString::number(argsA.pMat->at(i,j) ));
//            rowRead.append(" ");
//        }
//        rowRead.append("\n");
//    }

//    qDebug() << rowRead;



//    QString rowRead2;

//    for(int i = 0; i < argsB.pMat->getColSize(); i++)
//    {
//        for(int j = 0; j < argsB.pMat->getRowSize(); j++)
//        {
//            rowRead2.append( QString::number(argsB.pMat->at(i,j) ));
//            rowRead2.append(" ");
//        }
//        rowRead2.append("\n");
//    }

//    qDebug() << rowRead2;


    return 0;
}
